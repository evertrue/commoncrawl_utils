// File generated by rpc compiler. Do not edit.

package org.commoncrawl.query;

import java.io.DataInput;
import java.io.DataOutput;
import java.util.BitSet;
import java.io.IOException;
import org.apache.hadoop.io.Writable;
import org.apache.hadoop.io.WritableComparable;
import org.apache.hadoop.record.Buffer;
import org.commoncrawl.util.shared.FlexBuffer;
import org.commoncrawl.util.shared.TextBytes;
import org.commoncrawl.util.shared.MurmurHash;
import org.commoncrawl.util.shared.ImmutableBuffer;
import org.commoncrawl.rpc.BinaryProtocol;
import org.apache.hadoop.util.ReflectionUtils;
import org.apache.hadoop.conf.Configuration;

// Generated File: ClientQueryInfo
public class ClientQueryInfo extends org.commoncrawl.rpc.RPCStruct<ClientQueryInfo> implements Writable {

	// optimized constructor helper 
	public static ClientQueryInfo newInstance(Configuration conf) {
		return ReflectionUtils.newInstance(ClientQueryInfo.class, conf);
	}

	// Writable Implementation
	public void write(DataOutput out) throws IOException {
		this.serialize(out, new BinaryProtocol());
	}

	public void readFields(DataInput in) throws IOException {
		this.deserialize(in, new BinaryProtocol());
	}

	// Field Constants
	public static final int Field_CLIENTQUERYID = 1;
	public static final int Field_SORTBYFIELD = 3;
	public static final int Field_SORTORDER = 4;
	public static final int Field_PAGINATIONOFFSET = 5;
	public static final int Field_PAGESIZE = 6;
	public static final int Field_MAXAGE = 7;
	static final int FieldID_MAX = Field_MAXAGE;

	// Enumerations

	// Enum:SortOrder
	public static final class SortOrder {
		public static final int ASCENDING = 0;
		public static final int DESCENDING = 1;

		public static String toString(int enumValue) {
			switch (enumValue) {
			case 0:
				return "ASCENDING";
			case 1:
				return "DESCENDING";
			default:
				return "";
			}
		}
	}

	// Field Declarations
	private BitSet __validFields = new BitSet(FieldID_MAX + 1);

	private long clientQueryId;
	private TextBytes sortByField = new TextBytes();
	private int sortOrder;
	private int paginationOffset;
	private int pageSize;
	private long maxAge;

	// Default Constructor
	public ClientQueryInfo() {
	}

	// Accessors

	public final boolean isFieldDirty(int fieldId) {
		return __validFields.get(fieldId);
	}

	public final ClientQueryInfo setFieldDirty(int fieldId) {
		__validFields.set(fieldId);
		return this;
	}

	public final ClientQueryInfo setFieldClean(int fieldId) {
		__validFields.clear(fieldId);
		return this;
	}

	public long getClientQueryId() {
		return clientQueryId;
	}

	public ClientQueryInfo setClientQueryId(long clientQueryId) {
		__validFields.set(Field_CLIENTQUERYID);
		this.clientQueryId = clientQueryId;
		return this;
	}

	public TextBytes getSortByFieldAsTextBytes() {
		return sortByField;
	}

	public String getSortByField() {
		return sortByField.toString();
	}

	public ClientQueryInfo setSortByField(String sortByField) {
		__validFields.set(Field_SORTBYFIELD);
		this.sortByField.set(sortByField);
		return this;
	}

	public int getSortOrder() {
		return sortOrder;
	}

	public ClientQueryInfo setSortOrder(int sortOrder) {
		__validFields.set(Field_SORTORDER);
		this.sortOrder = sortOrder;
		return this;
	}

	public int getPaginationOffset() {
		return paginationOffset;
	}

	public ClientQueryInfo setPaginationOffset(int paginationOffset) {
		__validFields.set(Field_PAGINATIONOFFSET);
		this.paginationOffset = paginationOffset;
		return this;
	}

	public int getPageSize() {
		return pageSize;
	}

	public ClientQueryInfo setPageSize(int pageSize) {
		__validFields.set(Field_PAGESIZE);
		this.pageSize = pageSize;
		return this;
	}

	public long getMaxAge() {
		return maxAge;
	}

	public ClientQueryInfo setMaxAge(long maxAge) {
		__validFields.set(Field_MAXAGE);
		this.maxAge = maxAge;
		return this;
	}

	// Object Dirty support 

	public final boolean isObjectDirty() {
		boolean isDirty = !__validFields.isEmpty();
		return isDirty;
	}

	// serialize implementation 
	public final void serialize(DataOutput output, BinaryProtocol encoder) throws java.io.IOException {
		encoder.beginFields(output);
		// serialize field:clientQueryId
		if (__validFields.get(Field_CLIENTQUERYID)) {
			encoder.beginField(output, "clientQueryId", Field_CLIENTQUERYID);
			encoder.writeLong(output, clientQueryId);
		}
		// serialize field:sortByField
		if (__validFields.get(Field_SORTBYFIELD)) {
			encoder.beginField(output, "sortByField", Field_SORTBYFIELD);
			encoder.writeTextBytes(output, sortByField);
		}
		// serialize field:sortOrder
		if (__validFields.get(Field_SORTORDER)) {
			encoder.beginField(output, "sortOrder", Field_SORTORDER);
			encoder.writeInt(output, sortOrder);
		}
		// serialize field:paginationOffset
		if (__validFields.get(Field_PAGINATIONOFFSET)) {
			encoder.beginField(output, "paginationOffset", Field_PAGINATIONOFFSET);
			encoder.writeInt(output, paginationOffset);
		}
		// serialize field:pageSize
		if (__validFields.get(Field_PAGESIZE)) {
			encoder.beginField(output, "pageSize", Field_PAGESIZE);
			encoder.writeInt(output, pageSize);
		}
		// serialize field:maxAge
		if (__validFields.get(Field_MAXAGE)) {
			encoder.beginField(output, "maxAge", Field_MAXAGE);
			encoder.writeLong(output, maxAge);
		}
		encoder.endFields(output);
	}

	// deserialize implementation 
	public final void deserialize(DataInput input, BinaryProtocol decoder) throws java.io.IOException {
		// clear existing data first  
		clear();

		// reset protocol object to unknown field id enconding mode (for compatibility)
		decoder.pushFieldIdEncodingMode(BinaryProtocol.FIELD_ID_ENCODING_MODE_UNKNOWN);
		// keep reading fields until terminator (-1) is located 
		int fieldId;
		while ((fieldId = decoder.readFieldId(input)) != -1) {
			switch (fieldId) {
			case Field_CLIENTQUERYID: {
				__validFields.set(Field_CLIENTQUERYID);
				clientQueryId = decoder.readLong(input);
			}
				break;
			case Field_SORTBYFIELD: {
				__validFields.set(Field_SORTBYFIELD);
				decoder.readTextBytes(input, sortByField);
			}
				break;
			case Field_SORTORDER: {
				__validFields.set(Field_SORTORDER);
				sortOrder = decoder.readInt(input);
			}
				break;
			case Field_PAGINATIONOFFSET: {
				__validFields.set(Field_PAGINATIONOFFSET);
				paginationOffset = decoder.readInt(input);
			}
				break;
			case Field_PAGESIZE: {
				__validFields.set(Field_PAGESIZE);
				pageSize = decoder.readInt(input);
			}
				break;
			case Field_MAXAGE: {
				__validFields.set(Field_MAXAGE);
				maxAge = decoder.readLong(input);
			}
				break;
			}
		}
		// pop extra encoding mode off of stack 
		decoder.popFieldIdEncodingMode();
	}

	// clear implementation 
	public final void clear() {
		__validFields.clear();
		clientQueryId = 0;
		sortByField.clear();
		sortOrder = 0;
		paginationOffset = 0;
		pageSize = 0;
		maxAge = 0;
	}

	// equals implementation 
	public final boolean equals(final Object peer_) {
		if (!(peer_ instanceof ClientQueryInfo)) {
			return false;
		}
		if (peer_ == this) {
			return true;
		}
		ClientQueryInfo peer = (ClientQueryInfo) peer_;
		boolean ret = __validFields.equals(peer.__validFields);
		if (!ret)
			return ret;
		if (__validFields.get(Field_CLIENTQUERYID)) {
			ret = (clientQueryId == peer.clientQueryId);
			if (!ret)
				return ret;
		}
		if (__validFields.get(Field_SORTBYFIELD)) {
			ret = sortByField.equals(peer.sortByField);
			if (!ret)
				return ret;
		}
		if (__validFields.get(Field_SORTORDER)) {
			ret = (sortOrder == peer.sortOrder);
			if (!ret)
				return ret;
		}
		if (__validFields.get(Field_PAGINATIONOFFSET)) {
			ret = (paginationOffset == peer.paginationOffset);
			if (!ret)
				return ret;
		}
		if (__validFields.get(Field_PAGESIZE)) {
			ret = (pageSize == peer.pageSize);
			if (!ret)
				return ret;
		}
		if (__validFields.get(Field_MAXAGE)) {
			ret = (maxAge == peer.maxAge);
			if (!ret)
				return ret;
		}
		return ret;
	}

	// clone implementation 
	@SuppressWarnings("unchecked")
	public final Object clone() throws CloneNotSupportedException {
		ClientQueryInfo other = new ClientQueryInfo();
		other.__validFields.or(this.__validFields);
		if (__validFields.get(Field_CLIENTQUERYID)) {
			other.clientQueryId = this.clientQueryId;
		}
		if (__validFields.get(Field_SORTBYFIELD)) {
			other.sortByField = (TextBytes) this.sortByField.clone();
		}
		if (__validFields.get(Field_SORTORDER)) {
			other.sortOrder = this.sortOrder;
		}
		if (__validFields.get(Field_PAGINATIONOFFSET)) {
			other.paginationOffset = this.paginationOffset;
		}
		if (__validFields.get(Field_PAGESIZE)) {
			other.pageSize = this.pageSize;
		}
		if (__validFields.get(Field_MAXAGE)) {
			other.maxAge = this.maxAge;
		}
		return other;
	}

	// merge implementation 
	@SuppressWarnings("unchecked")
	public final void merge(ClientQueryInfo peer) throws CloneNotSupportedException {
		__validFields.or(peer.__validFields);
		if (peer.__validFields.get(Field_CLIENTQUERYID)) {
			this.clientQueryId = peer.clientQueryId;
		}
		if (peer.__validFields.get(Field_SORTBYFIELD)) {
			this.sortByField = (TextBytes) peer.sortByField.clone();
		}
		if (peer.__validFields.get(Field_SORTORDER)) {
			this.sortOrder = peer.sortOrder;
		}
		if (peer.__validFields.get(Field_PAGINATIONOFFSET)) {
			this.paginationOffset = peer.paginationOffset;
		}
		if (peer.__validFields.get(Field_PAGESIZE)) {
			this.pageSize = peer.pageSize;
		}
		if (peer.__validFields.get(Field_MAXAGE)) {
			this.maxAge = peer.maxAge;
		}
	}

	// hashCode implementation 
	public final int hashCode() {
		int result = 1;
		result = MurmurHash.hashLong(clientQueryId, result);
		result = MurmurHash.hash(sortByField.getBytes(), sortByField.getOffset(), sortByField.getLength(), result);
		result = MurmurHash.hashInt((int) sortOrder, result);
		result = MurmurHash.hashInt((int) paginationOffset, result);
		result = MurmurHash.hashInt((int) pageSize, result);
		result = MurmurHash.hashLong(maxAge, result);
		return result;
	}
}
